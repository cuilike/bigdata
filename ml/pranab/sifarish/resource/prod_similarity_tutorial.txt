This tutorial is on content based matching and recommendation for  products. The product 
has many attributes including category, price, brand and description which is a text field. 

We will be using the MR class SameTypeSimilarity. However, simce we have text fields we will
have to tokenize the text fields with stemming. This is accomplised with the MR class 
TextAnalyzer. The output of TextAnalyzer goes to SameTypeSimilarity as input.

Dependency Jars
===============
Please refer to resource/jar_dpendency.txt

Input
=====
Input is field delimiter separated text, where each line is a record. The delimiter can 
be configured as shown later under the configuration section.

Meta Data
=========
The meta data needs to be defined in JSON file and the file needs to be place in an HDFS 
directory. For our example, it's in prod.json.


Text Tokenization (Optional)
=================
This MR is needed if you text attributes. It normalizes text using apache lucene. 
Here is the script to run TextAnalyzer

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.common.TextAnalyzer

echo "running mr"
IN_PATH=/user/pranab/reco/contect/prod
OUT_PATH=/user/pranab/reco/content/tok
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/prod.properties  $IN_PATH  $OUT_PATH

Product Simarity
================
Herte is the script for SameTypeSimilarity

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.feature.SameTypeSimilarity

echo "running mr"
IN_PATH=/user/pranab/reco/content/tok
OUT_PATH=/user/pranab/reco/content/simi
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME -Dconf.path=/home/pranab/Projects/bin/sifarish/prod.properties  $IN_PATH  $OUT_PATH

Top n Matches
=============
The last phase is finding the top n items matched with a given item. The MR class is TopMatches.
Here is the script to run it

JAR_NAME=/home/pranab/Projects/sifarish/target/sifarish-1.0.jar
CLASS_NAME=org.sifarish.feature.TopMatches

echo "running mr"
IN_PATH=/user/pranab/reco/content/simi
OUT_PATH=/user/pranab/reco/content/topn
echo "input $IN_PATH output $OUT_PATH"
hadoop fs -rmr $OUT_PATH
echo "removed output dir"

hadoop jar $JAR_NAME  $CLASS_NAME  -Dconf.path=/home/pranab/Projects/bin/sifarish/prod.properties $IN_PATH  $OUT_PATH

Configuration
=============
Please take a look at  prod.properties. We have set inter.set.matching to false because we 
are finding pairwise distance between between all records. If it was set to true, we had to set 
base.set.split.prefix to the prefix of files belonging to one set.






